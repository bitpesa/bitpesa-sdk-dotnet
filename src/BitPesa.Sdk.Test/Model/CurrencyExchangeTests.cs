/* 
 * BitPesa API
 *
 * Reference documentation for the BitPesa API V1
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BitPesa.Sdk.Api;
using BitPesa.Sdk.Model;
using BitPesa.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace BitPesa.Sdk.Test
{
    /// <summary>
    ///  Class for testing CurrencyExchange
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class CurrencyExchangeTests
    {
        // TODO uncomment below to declare an instance variable for CurrencyExchange
        //private CurrencyExchange instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of CurrencyExchange
            //instance = new CurrencyExchange();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CurrencyExchange
        /// </summary>
        [Test]
        public void CurrencyExchangeInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" CurrencyExchange
            //Assert.IsInstanceOfType<CurrencyExchange> (instance, "variable 'instance' is a CurrencyExchange");
        }


        /// <summary>
        /// Test the property 'Code'
        /// </summary>
        [Test]
        public void CodeTest()
        {
            // TODO unit test for the property 'Code'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Symbol'
        /// </summary>
        [Test]
        public void SymbolTest()
        {
            // TODO unit test for the property 'Symbol'
        }
        /// <summary>
        /// Test the property 'Decimals'
        /// </summary>
        [Test]
        public void DecimalsTest()
        {
            // TODO unit test for the property 'Decimals'
        }
        /// <summary>
        /// Test the property 'SubunitToUnit'
        /// </summary>
        [Test]
        public void SubunitToUnitTest()
        {
            // TODO unit test for the property 'SubunitToUnit'
        }
        /// <summary>
        /// Test the property 'Primary'
        /// </summary>
        [Test]
        public void PrimaryTest()
        {
            // TODO unit test for the property 'Primary'
        }
        /// <summary>
        /// Test the property 'Min'
        /// </summary>
        [Test]
        public void MinTest()
        {
            // TODO unit test for the property 'Min'
        }
        /// <summary>
        /// Test the property 'Max'
        /// </summary>
        [Test]
        public void MaxTest()
        {
            // TODO unit test for the property 'Max'
        }
        /// <summary>
        /// Test the property 'Margin'
        /// </summary>
        [Test]
        public void MarginTest()
        {
            // TODO unit test for the property 'Margin'
        }
        /// <summary>
        /// Test the property 'UsdEquivalent'
        /// </summary>
        [Test]
        public void UsdEquivalentTest()
        {
            // TODO unit test for the property 'UsdEquivalent'
        }
        /// <summary>
        /// Test the property 'Opposites'
        /// </summary>
        [Test]
        public void OppositesTest()
        {
            // TODO unit test for the property 'Opposites'
        }

    }

}
