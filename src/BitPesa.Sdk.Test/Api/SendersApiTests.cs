/* 
 * BitPesa API
 *
 * Reference documentation for the BitPesa API V1
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using BitPesa.Sdk.Client;
using BitPesa.Sdk.Api;
using BitPesa.Sdk.Model;

namespace BitPesa.Sdk.Test
{
    /// <summary>
    ///  Class for testing SendersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SendersApiTests
    {
        private SendersApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SendersApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SendersApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SendersApi
            //Assert.IsInstanceOfType(typeof(SendersApi), instance, "instance is a SendersApi");
        }

        
        /// <summary>
        /// Test DeleteSender
        /// </summary>
        [Test]
        public void DeleteSenderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? senderID = null;
            //var response = instance.DeleteSender(senderID);
            //Assert.IsInstanceOf<SenderResponse> (response, "response is SenderResponse");
        }
        
        /// <summary>
        /// Test GetSender
        /// </summary>
        [Test]
        public void GetSenderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? senderID = null;
            //var response = instance.GetSender(senderID);
            //Assert.IsInstanceOf<SenderResponse> (response, "response is SenderResponse");
        }
        
        /// <summary>
        /// Test GetSenders
        /// </summary>
        [Test]
        public void GetSendersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? per = null;
            //string createdAtFrom = null;
            //string createdAtTo = null;
            //var response = instance.GetSenders(page, per, createdAtFrom, createdAtTo);
            //Assert.IsInstanceOf<SenderListResponse> (response, "response is SenderListResponse");
        }
        
        /// <summary>
        /// Test PatchSender
        /// </summary>
        [Test]
        public void PatchSenderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? senderID = null;
            //SenderRequest senderRequest = null;
            //var response = instance.PatchSender(senderID, senderRequest);
            //Assert.IsInstanceOf<SenderResponse> (response, "response is SenderResponse");
        }
        
        /// <summary>
        /// Test PostSenders
        /// </summary>
        [Test]
        public void PostSendersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SenderRequest senderRequest = null;
            //var response = instance.PostSenders(senderRequest);
            //Assert.IsInstanceOf<SenderResponse> (response, "response is SenderResponse");
        }
        
    }

}
