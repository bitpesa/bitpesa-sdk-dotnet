/* 
 * BitPesa API
 *
 * Reference documentation for the BitPesa API V1
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using BitPesa.Sdk.Client;
using BitPesa.Sdk.Api;
using BitPesa.Sdk.Model;

namespace BitPesa.Sdk.Test
{
    /// <summary>
    ///  Class for testing WebhooksApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class WebhooksApiTests
    {
        private WebhooksApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WebhooksApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WebhooksApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' WebhooksApi
            //Assert.IsInstanceOfType(typeof(WebhooksApi), instance, "instance is a WebhooksApi");
        }

        
        /// <summary>
        /// Test DeleteWebhook
        /// </summary>
        [Test]
        public void DeleteWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string webhookID = null;
            //var response = instance.DeleteWebhook(webhookID);
            //Assert.IsInstanceOf<WebhookDefinitionResponse> (response, "response is WebhookDefinitionResponse");
        }
        
        /// <summary>
        /// Test GetWebhook
        /// </summary>
        [Test]
        public void GetWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? webhookID = null;
            //var response = instance.GetWebhook(webhookID);
            //Assert.IsInstanceOf<WebhookDefinitionResponse> (response, "response is WebhookDefinitionResponse");
        }
        
        /// <summary>
        /// Test GetWebhookEvents
        /// </summary>
        [Test]
        public void GetWebhookEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetWebhookEvents();
            //Assert.IsInstanceOf<WebhookDefinitionEventListResponse> (response, "response is WebhookDefinitionEventListResponse");
        }
        
        /// <summary>
        /// Test GetWebhooks
        /// </summary>
        [Test]
        public void GetWebhooksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? per = null;
            //var response = instance.GetWebhooks(page, per);
            //Assert.IsInstanceOf<WebhookDefinitionListResponse> (response, "response is WebhookDefinitionListResponse");
        }
        
        /// <summary>
        /// Test PostWebhooks
        /// </summary>
        [Test]
        public void PostWebhooksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WebhookDefinitionRequest webhookDefinitionRequest = null;
            //var response = instance.PostWebhooks(webhookDefinitionRequest);
            //Assert.IsInstanceOf<WebhookDefinitionResponse> (response, "response is WebhookDefinitionResponse");
        }
        
    }

}
