/* 
 * BitPesa API
 *
 * Reference documentation for the BitPesa API V1
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = BitPesa.Sdk.Client.OpenAPIDateConverter;

namespace BitPesa.Sdk.Model
{
    /// <summary>
    /// &#x60;&#x60;&#x60;JSON \&quot;details\&quot;: {   \&quot;phone_number\&quot;: \&quot;+2569999999\&quot;,   \&quot;send_instructions\&quot;: true } &#x60;&#x60;&#x60;
    /// </summary>
    [DataContract]
    public partial class PayinMethodDetailsMobile :  IEquatable<PayinMethodDetailsMobile>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PayinMethodDetailsMobile" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PayinMethodDetailsMobile() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PayinMethodDetailsMobile" /> class.
        /// </summary>
        /// <param name="phoneNumber">The phone number where the funds should be collected from (required).</param>
        /// <param name="sendInstructions">States whether to send out the instructions to the phone number on how to pay the funds or not. This shuold always be set to true, otherwise the sender might not receive a prompt for payment..</param>
        public PayinMethodDetailsMobile(string phoneNumber = default(string), bool? sendInstructions = default(bool?))
        {
            this.PhoneNumber = phoneNumber;
            this.SendInstructions = sendInstructions;
        }
        
        /// <summary>
        /// The phone number where the funds should be collected from
        /// </summary>
        /// <value>The phone number where the funds should be collected from</value>
        [DataMember(Name="phone_number", EmitDefaultValue=false)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// States whether to send out the instructions to the phone number on how to pay the funds or not. This shuold always be set to true, otherwise the sender might not receive a prompt for payment.
        /// </summary>
        /// <value>States whether to send out the instructions to the phone number on how to pay the funds or not. This shuold always be set to true, otherwise the sender might not receive a prompt for payment.</value>
        [DataMember(Name="send_instructions", EmitDefaultValue=false)]
        public bool? SendInstructions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PayinMethodDetailsMobile {\n");
            sb.Append("  PhoneNumber: ").Append(PhoneNumber).Append("\n");
            sb.Append("  SendInstructions: ").Append(SendInstructions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PayinMethodDetailsMobile);
        }

        /// <summary>
        /// Returns true if PayinMethodDetailsMobile instances are equal
        /// </summary>
        /// <param name="input">Instance of PayinMethodDetailsMobile to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PayinMethodDetailsMobile input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PhoneNumber == input.PhoneNumber ||
                    (this.PhoneNumber != null &&
                    this.PhoneNumber.Equals(input.PhoneNumber))
                ) && 
                (
                    this.SendInstructions == input.SendInstructions ||
                    (this.SendInstructions != null &&
                    this.SendInstructions.Equals(input.SendInstructions))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PhoneNumber != null)
                    hashCode = hashCode * 59 + this.PhoneNumber.GetHashCode();
                if (this.SendInstructions != null)
                    hashCode = hashCode * 59 + this.SendInstructions.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
